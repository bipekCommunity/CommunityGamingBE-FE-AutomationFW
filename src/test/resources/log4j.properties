##root logger
#log4j.rootLogger = DEBUG, file
##appender
#log4j.appender.file = org.apache.log4j.RollingFileAppender
#log4j.appender.file.File = ./firstoutput.log
#log4j.appender.file.MaxFileSize = 2MB
#log4j.appender.file.MaxBackupIndex = 3
##layout
#log4j.appender.file.layout = org.apache.log4j.PatternLayout
#
#log4j.rootLogger=INFO, STDOUT
#log4j.logger.deng=INFO
#log4j.appender.STDOUT=org.apache.log4j.ConsoleAppender
#log4j.appender.STDOUT.layout=org.apache.log4j.PatternLayout
#log4j.appender.STDOUT.layout.ConversionPattern=%5p [%t] (%F:%L) - %m%n



# initialize root logger with level ERROR for stdout and fout
log4j.rootLogger=INFO,stdout,fout
# set the log level for these components
log4j.logger.com.endeca=INFO
log4j.logger.com.endeca.itl.web.metrics=INFO

# add a ConsoleAppender to the logger stdout to write to the console
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
# use a simple message format
log4j.appender.stdout.layout.ConversionPattern=%5p [%t] (%F:%L) - %m%n

# add a FileAppender to the logger fout
log4j.appender.fout=org.apache.log4j.FileAppender
# create a log file
log4j.appender.fout.File=application.log
log4j.appender.fout.layout=org.apache.log4j.PatternLayout
# use a more detailed message pattern
log4j.appender.fout.layout.ConversionPattern=%p\t%d{ISO8601}\t%r\t%c\t[%t]\t%m%n 
